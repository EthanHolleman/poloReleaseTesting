name: Create Release test 2

on:
  push:
    tags:
      - "v*"

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: false

  build_release:
    name: Build Release
    needs: create_release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            release_suffix: ubuntu
          - os: macos-latest
            release_suffix: mac
          - os: windows-latest
            release_suffix: windows.exe

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python 3.7 Mac
        if: matrix.os == 'macos-latest'
        uses: actions/setup-python@v3
        with:
          python-version: "3.7"

      - name: Setup Python 3.7 Windows
        if: matrix.os == 'windows-latest'
        uses: actions/setup-python@v3
        with:
          python-version: "3.7"

      - name: Setup Python 3.7 Linux
        if: matrix.os == 'ubuntu-latest'
        uses: actions/setup-python@v3
        with:
          python-version: "3.7"

      - name: Add conda to system path Mac
        if: matrix.os == 'macos-latest'
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH

      - name: Add conda to system path Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH

      - name: Add conda to system path Windows
        if: matrix.os == 'windows-latest'
        uses: s-weigand/setup-conda@v1
        with:
          activate-conda: false

      - name: Install dependencies Mac
        if: matrix.os == 'macos-latest'
        run: |
          conda update -c conda-canary conda
          conda env update --file environment.yml --name base

      - name: Install dependencies Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          conda env update --file environment.yml --name base

      - name: Install dependencies Windows
        if: matrix.os == 'windows-latest'
        run: |
          conda env update --file environment.yml --name base

      - name: Install dependencies Pip
        run: |
          pip install molmass python-pptx

      # - name: Run Pyinstaller Mac
      #   if: matrix.os == 'macos-latest'
      #   run: |
      #     pyinstaller Polo.spec F && mv dist/Polo dist/polo_mac

      - name: Run Pyinstaller Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          pyinstaller Polo.spec F && mv dist/Polo dist/polo_ubuntu

      # - name: Run Pyinstaller Windows
      #   if: matrix.os == 'windows-latest'
      #   run: |
      #     pyinstaller Polo.spec F 
      #     move dist/Polo.exe dist/polo_windows.exe


      #  - name: Install inno setup Windows
      #         if: matrix.os == 'windows-latest'
      #         run: |
      #           winget install https://jrsoftware.org/download.php/is.exe --locale en-US --accept-package-agreements --accept-source-agreements

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.create_release.outputs.tag-name }}
          files: dist/polo_${{ matrix.release_suffix }}
